/* 
 * Square Connect API
 *
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace Square.Connect.Model
{
    /// <summary>
    /// Contains information on the recipient of a fulfillment.
    /// </summary>
    [DataContract]
    public partial class OrderFulfillmentRecipient :  IEquatable<OrderFulfillmentRecipient>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderFulfillmentRecipient" /> class.
        /// </summary>
        /// <param name="CustomerId">The Customer ID of the customer associated with the fulfillment.  If &#x60;customer_id&#x60; is provided, the fulfillment recipient&#39;s &#x60;display_name&#x60;, &#x60;email_address&#x60;, and &#x60;phone_number&#x60; are automatically populated from the targeted customer profile. If these fields are set in the request, the request values will override the information from the customer profile. If the targeted customer profile does not contain the necessary information and these fields are left unset, the request will result in an error..</param>
        /// <param name="DisplayName">The display name of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by &#x60;customer_id&#x60;..</param>
        /// <param name="EmailAddress">The email address of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by &#x60;customer_id&#x60;..</param>
        /// <param name="PhoneNumber">The phone number of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by &#x60;customer_id&#x60;..</param>
        /// <param name="Address">The address of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by &#x60;customer_id&#x60;..</param>
        public OrderFulfillmentRecipient(string CustomerId = default(string), string DisplayName = default(string), string EmailAddress = default(string), string PhoneNumber = default(string), Address Address = default(Address))
        {
            this.CustomerId = CustomerId;
            this.DisplayName = DisplayName;
            this.EmailAddress = EmailAddress;
            this.PhoneNumber = PhoneNumber;
            this.Address = Address;
        }
        
        /// <summary>
        /// The Customer ID of the customer associated with the fulfillment.  If &#x60;customer_id&#x60; is provided, the fulfillment recipient&#39;s &#x60;display_name&#x60;, &#x60;email_address&#x60;, and &#x60;phone_number&#x60; are automatically populated from the targeted customer profile. If these fields are set in the request, the request values will override the information from the customer profile. If the targeted customer profile does not contain the necessary information and these fields are left unset, the request will result in an error.
        /// </summary>
        /// <value>The Customer ID of the customer associated with the fulfillment.  If &#x60;customer_id&#x60; is provided, the fulfillment recipient&#39;s &#x60;display_name&#x60;, &#x60;email_address&#x60;, and &#x60;phone_number&#x60; are automatically populated from the targeted customer profile. If these fields are set in the request, the request values will override the information from the customer profile. If the targeted customer profile does not contain the necessary information and these fields are left unset, the request will result in an error.</value>
        [DataMember(Name="customer_id", EmitDefaultValue=false)]
        public string CustomerId { get; set; }
        /// <summary>
        /// The display name of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by &#x60;customer_id&#x60;.
        /// </summary>
        /// <value>The display name of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by &#x60;customer_id&#x60;.</value>
        [DataMember(Name="display_name", EmitDefaultValue=false)]
        public string DisplayName { get; set; }
        /// <summary>
        /// The email address of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by &#x60;customer_id&#x60;.
        /// </summary>
        /// <value>The email address of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by &#x60;customer_id&#x60;.</value>
        [DataMember(Name="email_address", EmitDefaultValue=false)]
        public string EmailAddress { get; set; }
        /// <summary>
        /// The phone number of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by &#x60;customer_id&#x60;.
        /// </summary>
        /// <value>The phone number of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by &#x60;customer_id&#x60;.</value>
        [DataMember(Name="phone_number", EmitDefaultValue=false)]
        public string PhoneNumber { get; set; }
        /// <summary>
        /// The address of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by &#x60;customer_id&#x60;.
        /// </summary>
        /// <value>The address of the fulfillment recipient.  If provided, overrides the value pulled from the customer profile indicated by &#x60;customer_id&#x60;.</value>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public Address Address { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrderFulfillmentRecipient {\n");
            sb.Append("  CustomerId: ").Append(CustomerId).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as OrderFulfillmentRecipient);
        }

        /// <summary>
        /// Returns true if OrderFulfillmentRecipient instances are equal
        /// </summary>
        /// <param name="other">Instance of OrderFulfillmentRecipient to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderFulfillmentRecipient other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.CustomerId == other.CustomerId ||
                    this.CustomerId != null &&
                    this.CustomerId.Equals(other.CustomerId)
                ) && 
                (
                    this.DisplayName == other.DisplayName ||
                    this.DisplayName != null &&
                    this.DisplayName.Equals(other.DisplayName)
                ) && 
                (
                    this.EmailAddress == other.EmailAddress ||
                    this.EmailAddress != null &&
                    this.EmailAddress.Equals(other.EmailAddress)
                ) && 
                (
                    this.PhoneNumber == other.PhoneNumber ||
                    this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(other.PhoneNumber)
                ) && 
                (
                    this.Address == other.Address ||
                    this.Address != null &&
                    this.Address.Equals(other.Address)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.CustomerId != null)
                    hash = hash * 59 + this.CustomerId.GetHashCode();
                if (this.DisplayName != null)
                    hash = hash * 59 + this.DisplayName.GetHashCode();
                if (this.EmailAddress != null)
                    hash = hash * 59 + this.EmailAddress.GetHashCode();
                if (this.PhoneNumber != null)
                    hash = hash * 59 + this.PhoneNumber.GetHashCode();
                if (this.Address != null)
                    hash = hash * 59 + this.Address.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            // DisplayName (string) maxLength
            if(this.DisplayName != null && this.DisplayName.Length > 255)
            {
                yield return new ValidationResult("Invalid value for DisplayName, length must be less than 255.", new [] { "DisplayName" });
            }

            // EmailAddress (string) maxLength
            if(this.EmailAddress != null && this.EmailAddress.Length > 255)
            {
                yield return new ValidationResult("Invalid value for EmailAddress, length must be less than 255.", new [] { "EmailAddress" });
            }

            // PhoneNumber (string) maxLength
            if(this.PhoneNumber != null && this.PhoneNumber.Length > 16)
            {
                yield return new ValidationResult("Invalid value for PhoneNumber, length must be less than 16.", new [] { "PhoneNumber" });
            }

            yield break;
        }
    }

}
